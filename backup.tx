
## ðŸ”¹ 1. Struktur Program Arduino
Program Arduino selalu punya **dua bagian utama**:

```cpp
void setup() {
  // Bagian ini jalan SEKALI saat Arduino pertama kali nyala
}

void loop() {
  // Bagian ini jalan BERULANG-ULANG tanpa henti
}
```

- `setup()` â†’ untuk persiapan awal (set pin, mulai komunikasi, dll).  
- `loop()` â†’ untuk perintah utama yang terus diulang.

---

## ðŸ”¹ 2. Variabel & Tipe Data
Variabel = tempat untuk menyimpan data.

```cpp
int umur = 18;        // bilangan bulat
float suhu = 25.5;    // bilangan desimal
char huruf = 'A';     // karakter tunggal
String nama = "Budi"; // teks
bool hidup = true;    // logika (true/false)
```

| Tipe Data | Contoh     | Keterangan                          |
|-----------|------------|-------------------------------------|
| `int`     | 10         | bilangan bulat (-32k sampai 32k)    |
| `long`    | 100000     | bilangan bulat lebih besar          |
| `float`   | 3.14       | bilangan desimal                    |
| `char`    | 'A'        | karakter tunggal                    |
| `String`  | "Halo"     | teks panjang                        |
| `bool`    | true/false | logika benar/salah                  |

---

## ðŸ”¹ 3. Operator Dasar
Operator digunakan untuk menghitung atau membandingkan.

```cpp
int a = 10;
int b = 3;

int tambah = a + b;   // 13
int kurang = a - b;   // 7
int kali   = a * b;   // 30
int bagi   = a / b;   // 3
int sisa   = a % b;   // 1

bool lebihBesar = a > b;  // true
bool sama       = a == b; // false
```

---

## ðŸ”¹ 4. Kondisi (if/else)
Dipakai untuk membuat keputusan.

```cpp
int suhu = 30;

if (suhu > 28) {
  Serial.println("Panas!");
} else {
  Serial.println("Normal.");
}
```

---

## ðŸ”¹ 5. Perulangan (Loop)
Untuk mengulang perintah beberapa kali.

```cpp
// For loop
for (int i = 0; i < 5; i++) {
  Serial.println(i);  // cetak 0 sampai 4
}

// While loop
int j = 0;
while (j < 5) {
  Serial.println(j);
  j++;
}
```

---

## ðŸ”¹ 6. Fungsi
Fungsi = blok kode yang bisa dipanggil berkali-kali.

```cpp
int kaliDua(int x) {
  return x * 2;
}

void loop() {
  int hasil = kaliDua(5); // hasil = 10
  Serial.println(hasil);
}
```

---

## ðŸ”¹ 7. Input & Output Arduino
Arduino bisa **membaca** (input) dan **mengendalikan** (output) pin.

```cpp
pinMode(pin, OUTPUT);          // set pin jadi output
pinMode(pin, INPUT);           // set pin jadi input
digitalWrite(pin, HIGH/LOW);   // kasih sinyal nyala/mati
digitalRead(pin);              // baca tombol (HIGH/LOW)
analogRead(pin);               // baca sensor analog (0-1023)
analogWrite(pin, nilai);       // kasih PWM (0-255)
```

---

## ðŸ”¹ 8. Latihan Dasar (Tanpa Rangkaian)

### 8.1 Cetak teks ke Serial Monitor
```cpp
void setup() {
  Serial.begin(9600); // mulai komunikasi serial
}

void loop() {
  Serial.println("Halo, Arduino!");
  delay(1000); // tunggu 1 detik
}
```

ðŸ‘‰ Hasil: tiap 1 detik muncul teks di Serial Monitor.

---

### 8.2 Variabel + If
```cpp
void setup() {
  Serial.begin(9600);
}

void loop() {
  int suhu = 32;

  if (suhu > 30) {
    Serial.println("Panas!");
  } else {
    Serial.println("Normal.");
  }
  delay(1000);
}
```

---

### 8.3 Perulangan For
```cpp
void setup() {
  Serial.begin(9600);
}

void loop() {
  for (int i = 1; i <= 5; i++) {
    Serial.println(i);
    delay(500);
  }
}
```

ðŸ‘‰ Hasil: angka 1â€“5 muncul di Serial Monitor.

---

## ðŸŽ¯ Kesimpulan
- Program Arduino terdiri dari `setup()` dan `loop()`.  
- Kamu bisa menyimpan data dengan **variabel**.  
- Gunakan **if/else** untuk keputusan.  
- Gunakan **loop** untuk pengulangan.  
- Gunakan **fungsi** agar kode lebih rapi.  
- Arduino bisa **input** (sensor) dan **output** (LED, motor, dsb).

ðŸ‘‰ Setelah paham fundamental ini, kita bisa lanjut ke **Hardware Dasar** (LED, tombol, sensor) lalu ke **IoT (WiFi, MQTT, HTTP)**.

---
